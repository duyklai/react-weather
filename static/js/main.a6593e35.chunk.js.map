{"version":3,"sources":["Components/Title.js","Components/Form.js","Components/Weather.js","Components/Forecast.js","App.js","index.js"],"names":["Title","className","Form","props","onSubmit","getWeather","name","type","placeholder","autoComplete","value","error","Weather","visible","city","country","date","weather_icon","src","alt","description","temperature","Forecast","date2","weather_icon2","description2","temperature2","date3","weather_icon3","description3","temperature3","date4","weather_icon4","description4","temperature4","API_KEY","App","state","undefined","date_forecast_day2","temp_forecast_day2","description_day2","weather_icon_day2","date_forecast_day3","temp_forecast_day3","description_day3","weather_icon_day3","date_forecast_day4","temp_forecast_day4","description_day4","weather_icon_day4","e","a","preventDefault","target","elements","fetch","fetch_weather","json","data","fetch_forecast","forecast","console","log","currentTime","hourConverter","list","dt","difference","Math","ceil","setState","timeConverter","round","main","temp","sys","weather","icon","UNIX_timestamp","full_date","Date","getMonth","getDate","getHours","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6593e35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Made into stateless function components\r\n// Responsible for showing title of app\r\nconst Title = () => (\r\n  <div className=\"title\">\r\n    <h1>Weather</h1>\r\n  </div>\r\n);\r\n\r\nexport default Title;\r\n","import React from 'react';\r\n\r\n// Made into stateless function components\r\n// Responsible for showing input forms\r\nconst Form = props => (\r\n  <div className=\"form-div\">\r\n    <form className=\"location-form\" onSubmit={props.getWeather}>\r\n      <input\r\n        className=\"city\"\r\n        name=\"city\"\r\n        type=\"text\"\r\n        placeholder=\"City...\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <input\r\n        className=\"country\"\r\n        name=\"country\"\r\n        type=\"text\"\r\n        placeholder=\"Country...\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <input type=\"submit\" value=\"Find\" />\r\n    </form>\r\n    {props.error && <p>{props.error}</p>}\r\n  </div>\r\n);\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\n// Made into stateless function components\r\n// Responsible for showing current weather\r\nconst Weather = props => (\r\n  <div className={'weather-tile ' + (props.visible ? '' : 'hidden')}>\r\n    <div className=\"date-info\">\r\n      {props.city && props.country && (\r\n        <p className=\"location\">\r\n          <i className=\"material-icons\">navigation</i>\r\n          <span className=\"color-text\">\r\n            {props.city}, {props.country}\r\n          </span>\r\n        </p>\r\n      )}\r\n      {props.date && <p>{props.date}</p>}\r\n    </div>\r\n    <div className=\"weather-info\">\r\n      <div className=\"weather-temp\">\r\n        {props.weather_icon && (\r\n          <img\r\n            className=\"weather-status\"\r\n            src={`http://openweathermap.org/img/wn/${props.weather_icon}@2x.png`}\r\n            alt={`${props.description}`}\r\n          ></img>\r\n        )}\r\n        {props.temperature && (\r\n          <p className=\"color-text\">{props.temperature}&#176;F</p>\r\n        )}\r\n      </div>\r\n      <div className=\"weather-condition\">\r\n        {props.description && <p>{props.description}</p>}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\n\r\n// Responsible for showing forecast div below the current weather\r\nconst Forecast = props => (\r\n  <div className={'forecast-tile' + (props.visible ? '' : 'hidden')}>\r\n    <div className=\"day2\">\r\n      <div className=\"forecast-date-info\">\r\n        {props.date2 && <p>{props.date2}</p>}\r\n      </div>\r\n      <div className=\"forecast-weather-info\">\r\n        <div className=\"forecast-weather-temp\">\r\n          {props.weather_icon2 && (\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${props.weather_icon2}@2x.png`}\r\n              alt={`${props.description2}`}\r\n            ></img>\r\n          )}\r\n          {props.temperature2 && (\r\n            <p className=\"color-text\">{props.temperature2}&#176;F</p>\r\n          )}\r\n        </div>\r\n        <div className=\"forecast-condition\">\r\n          {props.description2 && <p>{props.description2}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"day3\">\r\n      <div className=\"forecast-date-info\">\r\n        {props.date3 && <p>{props.date3}</p>}\r\n      </div>\r\n      <div className=\"forecast-weather-info\">\r\n        <div className=\"forecast-weather-temp\">\r\n          {props.weather_icon3 && (\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${props.weather_icon3}@2x.png`}\r\n              alt={`${props.description3}`}\r\n            ></img>\r\n          )}\r\n          {props.temperature3 && (\r\n            <p className=\"color-text\">{props.temperature3}&#176;F</p>\r\n          )}\r\n        </div>\r\n        <div className=\"forecast-condition\">\r\n          {props.description3 && <p>{props.description3}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"day4\">\r\n      <div className=\"forecast-date-info\">\r\n        {props.date4 && <p>{props.date4}</p>}\r\n      </div>\r\n      <div className=\"forecast-weather-info\">\r\n        <div className=\"forecast-weather-temp\">\r\n          {props.weather_icon4 && (\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${props.weather_icon4}@2x.png`}\r\n              alt={`${props.description4}`}\r\n            ></img>\r\n          )}\r\n          {props.temperature4 && (\r\n            <p className=\"color-text\">{props.temperature4}&#176;F</p>\r\n          )}\r\n        </div>\r\n        <div className=\"forecast-condition\">\r\n          {props.description4 && <p>{props.description4}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Forecast;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Title from './Components/Title';\r\nimport Form from './Components/Form';\r\nimport Weather from './Components/Weather';\r\nimport Forecast from './Components/Forecast';\r\n\r\nconst API_KEY = 'cb097335fd62f4cf147aefee07730478';\r\n\r\nclass App extends React.Component {\r\n  /* OLD REACT\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  */\r\n\r\n  // Initial state of object\r\n  state = {\r\n    date: undefined,\r\n    temperature: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    description: undefined,\r\n    weather_icon: undefined,\r\n\r\n    date_forecast_day2: undefined,\r\n    temp_forecast_day2: undefined,\r\n    description_day2: undefined,\r\n    weather_icon_day2: undefined,\r\n\r\n    date_forecast_day3: undefined,\r\n    temp_forecast_day3: undefined,\r\n    description_day3: undefined,\r\n    weather_icon_day3: undefined,\r\n\r\n    date_forecast_day4: undefined,\r\n    temp_forecast_day4: undefined,\r\n    description_day4: undefined,\r\n    weather_icon_day4: undefined,\r\n\r\n    visible: false,\r\n    error: undefined\r\n  };\r\n\r\n  // Function to convert UNIX time of API from openweathermap to get date\r\n  timeConverter(UNIX_timestamp) {\r\n    var full_date = new Date(UNIX_timestamp * 1000);\r\n    var months = [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec'\r\n    ];\r\n    var month = months[full_date.getMonth()];\r\n    var date = full_date.getDate();\r\n    var time = month + ', ' + date;\r\n    return time;\r\n  }\r\n\r\n  hourConverter(UNIX_timestamp) {\r\n    var full_date = new Date(UNIX_timestamp * 1000);\r\n    var hour = full_date.getHours();\r\n    var time = hour;\r\n    return time;\r\n  }\r\n\r\n  getWeather = async e => {\r\n    // Prevent refresh of page\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.city.value;\r\n\r\n    // Checking for non-empty input in form\r\n    if (city && country) {\r\n      // Getting current weather\r\n      const fetch_weather = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}&units=imperial`\r\n      );\r\n      const data = await fetch_weather.json();\r\n      // Getting forecast weather\r\n      const fetch_forecast = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&APPID=${API_KEY}&units=imperial`\r\n      );\r\n      const forecast = await fetch_forecast.json();\r\n      // calculate the array distance between current data and next day data\r\n      // weather data from api contains data of 3h periods\r\n      console.log(data);\r\n      let currentTime = this.hourConverter(forecast.list[0].dt);\r\n      let difference = Math.ceil((24 - currentTime) / 3);\r\n      // if (difference === 12) {\r\n      //   difference = 11;\r\n      // }\r\n      console.log(currentTime);\r\n      console.log(difference);\r\n      console.log(forecast);\r\n      this.setState({\r\n        date: this.timeConverter(data.dt),\r\n        temperature: Math.round(data.main.temp),\r\n        city: data.name,\r\n        country: data.sys.country,\r\n        description: data.weather[0].description,\r\n        weather_icon: data.weather[0].icon,\r\n\r\n        date_forecast_day2: this.timeConverter(forecast.list[difference].dt),\r\n        temp_forecast_day2: Math.round(forecast.list[difference].main.temp),\r\n        description_day2: forecast.list[difference].weather[0].description,\r\n        weather_icon_day2: forecast.list[difference].weather[0].icon,\r\n\r\n        date_forecast_day3: this.timeConverter(\r\n          forecast.list[difference + 8].dt\r\n        ),\r\n        temp_forecast_day3: Math.round(forecast.list[difference + 8].main.temp),\r\n        description_day3: forecast.list[difference + 8].weather[0].description,\r\n        weather_icon_day3: forecast.list[difference + 8].weather[0].icon,\r\n\r\n        date_forecast_day4: this.timeConverter(\r\n          forecast.list[difference + 16].dt\r\n        ),\r\n        temp_forecast_day4: Math.round(\r\n          forecast.list[difference + 16].main.temp\r\n        ),\r\n        description_day4: forecast.list[difference + 16].weather[0].description,\r\n        weather_icon_day4: forecast.list[difference + 16].weather[0].icon,\r\n\r\n        // Show div boxes when city and country have been successfully submitted\r\n        visible: true,\r\n        error: ''\r\n      });\r\n    } else {\r\n      // When user does not fill out the form completely\r\n      this.setState({\r\n        error: 'Please enter a city and country'\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title />\r\n        {/* Passing prop of getweather function to form so when submitting, can call function */}\r\n        {/* Passing error message when form is not filled out correctly */}\r\n        <Form getWeather={this.getWeather} error={this.state.error} />\r\n        {/* Passing prop of states to display on page */}\r\n        <Weather\r\n          date={this.state.date}\r\n          temperature={this.state.temperature}\r\n          city={this.state.city}\r\n          country={this.state.country}\r\n          description={this.state.description}\r\n          weather_icon={this.state.weather_icon}\r\n          visible={this.state.visible}\r\n        />\r\n        {/* Passing all data of forecast of states to display on page */}\r\n        <Forecast\r\n          date2={this.state.date_forecast_day2}\r\n          temperature2={this.state.temp_forecast_day2}\r\n          description2={this.state.description_day2}\r\n          weather_icon2={this.state.weather_icon_day2}\r\n          date3={this.state.date_forecast_day3}\r\n          temperature3={this.state.temp_forecast_day3}\r\n          description3={this.state.description_day3}\r\n          weather_icon3={this.state.weather_icon_day3}\r\n          date4={this.state.date_forecast_day4}\r\n          temperature4={this.state.temp_forecast_day4}\r\n          description4={this.state.description_day4}\r\n          weather_icon4={this.state.weather_icon_day4}\r\n          visible={this.state.visible}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}